name: CI/CD Pipeline for React Frontend

on:
  push:
    branches:
      - main  # Trigger this workflow when pushing to the main branch

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set CI to false to prevent warnings from blocking the build
      - name: Set CI to false
        run: echo "CI=false" >> $GITHUB_ENV

      # Step 3: Cache Node.js modules
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Step 4: Set up Node.js and install dependencies
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18  # Make sure this matches your app's Node version

      # Step 5: Install app dependencies
      - name: Install dependencies
        run: npm ci  # Use `npm ci` for clean installs

      # Step 6: Build the React app
      - name: Build the React app
        run: npm run build

      # Step 7: Set up Docker Buildx (for building multi-platform images)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 8: Log in to Docker Hub using secrets
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 9: Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/attendance_frontend:latest
          file: ./Dockerfile

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push  # This job depends on the successful completion of build-and-push

    steps:
      # Step 1: SSH into the server to deploy the Docker container
      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            # Navigate to the directory where your docker-compose file is located
            cd ~/attendance_frontend

            # Stop and remove any existing containers
            docker-compose down || true

         
            # Pull the latest changes
            git pull origin main

            # Build the Docker containers
            docker-compose build

            # Start the containers in detached mode
            docker-compose up -d